services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    ports:
      - '5432:5432'
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: [ "redis-server", "--loglevel", "warning" ]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: auth-service
    env_file: .env
    ports:
      - "${AUTH_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://auth-service:${AUTH_PORT:-3000}/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    ports:
      - "${USER_PORT:-3001}:3001"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://user-service:${USER_PORT:-3001}/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
    ports:
      - "${ORDER_PORT:-3002}:3002"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://order-service:${ORDER_PORT:-3002}/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway-service:
    build:
      context: .
      dockerfile: services/gateway-service/Dockerfile
    ports:
      - "${GATEWAY_PORT:-3003}:3003"
    env_file: .env
    depends_on:
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://gateway-service:${GATEWAY_PORT:-3003}/health" ]
      interval: 10s
      timeout: 5s
      retries: 5